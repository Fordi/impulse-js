{"name":"Impulse-js","tagline":"Library for translating iMpulse gamepad keyboard events into joypad events for a game","body":"iMpulseJS\r\n=========\r\n\r\nThis is a small library to translate keyboard events from an iMpulse controller into something that would be usable by an HTML5 game.\r\n\r\n[See a demo](http://fordi.github.io/impulse-js/demo/)\r\n\r\nUsage:\r\n\r\n\tiMpulse.on(buttonName, eventType, [context], callback);\r\n\tiMpulse.off(buttonName, eventType, callback);\r\n\r\nbuttonName can be any of the following:\r\n\r\n* REV\r\n* FWD\r\n* SCROLL<\r\n* SCROLL>\r\n* UP\r\n* LEFT\r\n* RIGHT\r\n* DOWN\r\n* A\r\n* W\r\n* V\r\n* M\r\n* N\r\n* U\r\n* PLAY\r\n* ESC\r\n* ENTER\r\n* MUTE\r\n* VOL+\r\n* VOL-\r\n\r\neventType is either UP or DOWN.\r\n\r\nThere are some special values for buttonName and eventType:\r\n\r\n* buttonName = MODE, eventType = SET - this event indicates that the user has changed the controller's mode.  Inspect iMpulse.state to see what changed.\r\n* buttonName = ANY, eventType = ANY - indicates that the developer wants to be alerted of ALL events\r\n\t\r\ncallback is a function with three arguments: buttonName, eventType, and timestamp\r\n\r\n### iMpulse.state:\r\n\r\n* mode\r\n\t* one of UNIVERSAL, MEDIA, IOS, or TV\r\n* handedness\r\n\t* LEFT or RIGHT\r\n* player\r\n\t* P1 or P2\r\n* REV\r\n* FWD\r\n* SCROLL<\r\n* SCROLL>\r\n* UP\r\n* LEFT\r\n* RIGHT\r\n* DOWN\r\n* A\r\n* W\r\n* V\r\n* M\r\n* N\r\n* U\r\n* PLAY\r\n* ESC\r\n* ENTER\r\n* MUTE\r\n* VOL+\r\n* VOL-\r\n\t\r\nNOTE: IOS buttons are not supported; they overlap incompatibly with universal buttons, and are harder to parse.  Since it would be redundant, I elected to skip them for now.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}